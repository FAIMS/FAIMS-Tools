--select debug_format();

select sqlite_version();

select format('hello world {{ if $1 then $1 }}', '1');

select format('{{if and($2,$1) then "$2 $1" elsif and($2, not($1)) then $2 elsif and(not($2), $1) then $1}}{{if and($1,$3) then "("}}{{if $3 then $3}}{{if and($1,$3) then ")"}}{{if and(greaterThan($4,0), lessThan($4,1)) then "?"}}', 'Vocabname', 'Measure', 'Freetext', 'Certainty');


select format('$1 formatString:"$2"',attributename, formatstring) from attributekey;

select uuid from latestnondeletedarchent limit 1;


begin;
update attributekey set formatstring = '{{if and($2,$1) then "$2 $1" elsif and($2, not($1)) then $2 elsif and(not($2), $1) then $1}}{{if and($1,$3) then "("}}{{if $3 then $3}}{{if and($1,$3) then ")"}}{{if and(greaterThan($4,0), lessThan($4,1)) then "?"}}' where formatstring is null;

-- select uuid, group_concat(response, ', ') as response, deleted, aenttimestamp
-- from (
--   select uuid, aenttypename, attributename, group_concat(coalesce(measure    || ' '  || vocabname  || '(' ||freetext||'; '|| (certainty * 100.0) || '% certain)',
--                                         measure    || ' (' || freetext   ||'; '|| (certainty * 100.0)  || '% certain)',
--                                         vocabname  || ' (' || freetext   ||'; '|| (certainty * 100.0)  || '% certain)',
--                                         measure    || ' ' || vocabname   ||' ('|| (certainty * 100.0)  || '% certain)',
--                                         vocabname  || ' (' || freetext || ')',
--                                         measure    || ' (' || freetext || ')',
--                                         measure    || ' (' || (certainty * 100.0) || '% certain)',
--                                         vocabname  || ' (' || (certainty * 100.0) || '% certain)',
--                                         freetext   || ' (' || (certainty * 100.0) || '% certain)',
--                                         measure,
--                                         vocabname,
--                                         freetext), ' | ') as response, attributeid, deleted, aenttimestamp
--   from latestNonDeletedArchEntIdentifiers
--   where aenttypeid = :type
--   group by uuid, attributeid
--   order by epoch)
-- group by uuid
-- limit :limit
-- offset :offset


select count(*) from aentvalue;

select uuid, freetext from latestNonDeletedArchentIdentifiers limit 1;
select aenttypeid, aenttypename from aenttype;


select uuid, group_concat(format(formatstring, vocabname, measure, freetext, certainty), appendcharacterstring), deleted, aenttimestamp
from latestNonDeletedArchentIdentifiers
group by uuid, attributeid
limit 5
offset 5;




rollback;
